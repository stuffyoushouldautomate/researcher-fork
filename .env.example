# Application Settings
DEBUG=True
APP_ENV=development

# Branding Configuration
NEXT_PUBLIC_BRAND_NAME=Bulldozer
NEXT_PUBLIC_LOGO_URL=/logo.png
NEXT_PUBLIC_BRAND_COLOR=#ff6b35

# docker build args
NEXT_PUBLIC_API_URL="https://${{Python-backend.RAILWAY_PUBLIC_DOMAIN}}/api"
PORT="8080"
PUBLIC_URL="https://${{RAILWAY_PUBLIC_DOMAIN}}"

AGENT_RECURSION_LIMIT=30

# CORS settings
# Comma-separated list of allowed origins for CORS requests
# Example: ALLOWED_ORIGINS=http://localhost:3000,http://example.com
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:8080,https://bulldozer825.com

# Enable or disable MCP server configuration, the default is false.
# Please enable this feature before securing your front-end and back-end in a managed environment.
# Otherwise, you system could be compromised.
ENABLE_MCP_SERVER_CONFIGURATION=false

# Enable or disable PYTHON_REPL configuration, the default is false.
# Please enable this feature before securing your in a managed environment.
# Otherwise, you system could be compromised.
ENABLE_PYTHON_REPL=false

# Search Engine, Supported values: tavily (recommended), duckduckgo, brave_search, arxiv
SEARCH_API=tavily
TAVILY_API_KEY=your_tavily_api_key_here
BRAVE_SEARCH_API_KEY=your_brave_search_api_key_here
JINA_API_KEY=your_jina_api_key_here

# Optional, RAG provider
# RAG_PROVIDER=vikingdb_knowledge_base
# VIKINGDB_KNOWLEDGE_BASE_API_URL="api-knowledgebase.mlp.cn-beijing.volces.com"
# VIKINGDB_KNOWLEDGE_BASE_API_AK="AKxxx"
# VIKINGDB_KNOWLEDGE_BASE_API_SK=""
# VIKINGDB_KNOWLEDGE_BASE_RETRIEVAL_SIZE=15

# RAG_PROVIDER=ragflow
# RAGFLOW_API_URL="http://localhost:9388"
# RAGFLOW_API_KEY="ragflow-xxx"
# RAGFLOW_RETRIEVAL_SIZE=10
# RAGFLOW_CROSS_LANGUAGES=English,Chinese,Spanish,French,German,Japanese,Korean # Optional. To use RAGFlow's cross-language search, please separate each language with a single comma


# RAG_PROVIDER: milvus  (using free milvus instance on zilliz cloud: https://docs.zilliz.com/docs/quick-start )
# RAG_PROVIDER=milvus
# MILVUS_URI=<endpoint_of_self_hosted_milvus_or_zilliz_cloud>
# MILVUS_USER=<username_of_self_hosted_milvus_or_zilliz_cloud>
# MILVUS_PASSWORD=<password_of_self_hosted_milvus_or_zilliz_cloud>
# MILVUS_COLLECTION=documents
# MILVUS_EMBEDDING_PROVIDER=openai # support openai,dashscope
# MILVUS_EMBEDDING_BASE_URL=
# MILVUS_EMBEDDING_MODEL=
# MILVUS_EMBEDDING_API_KEY=
# MILVUS_AUTO_LOAD_EXAMPLES=true

# RAG_PROVIDER: milvus  (using milvus lite on Mac or Linux)
# RAG_PROVIDER=milvus
# MILVUS_URI=./milvus_demo.db
# MILVUS_COLLECTION=documents
# MILVUS_EMBEDDING_PROVIDER=openai # support openai,dashscope
# MILVUS_EMBEDDING_BASE_URL=
# MILVUS_EMBEDDING_MODEL=
# MILVUS_EMBEDDING_API_KEY=
# MILVUS_AUTO_LOAD_EXAMPLES=true

# Optional, volcengine TTS for generating podcast
# VOLCENGINE_TTS_APPID=xxx
# VOLCENGINE_TTS_ACCESS_TOKEN=xxx
# VOLCENGINE_TTS_CLUSTER=volcano_tts # Optional, default is volcano_tts
# VOLCENGINE_TTS_VOICE=zh_female_qingxin # Optional, default is zh_female_qingxin

# Optional, for langgraph mongodb checkpointer
# Enable LangGraph checkpoint saver, supports MongoDB, Postgres
LANGGRAPH_CHECKPOINT_SAVER=true
# Set the database URL for saving checkpoints
#LANGGRAPH_CHECKPOINT_DB_URL=mongodb://localhost:27017/
LANGGRAPH_CHECKPOINT_DB_URL=postgresql://localhost:5432/postgres

# Github OAuth Token
GITHUB_OAUTH_TOKEN=your_github_token_here

# Basic Model Configuration
BASIC_MODEL__platform=openai
BASIC_MODEL__model=gpt-4o
BASIC_MODEL__api_key=your_openai_api_key_here
BASIC_MODEL__max_retries=3

# Search Engine Configuration
SEARCH_ENGINE__engine=tavily
SEARCH_ENGINE__include_domains=trusted-news.com,gov.org,reliable-source.edu
SEARCH_ENGINE__exclude_domains=unreliable-site.com,spam-domain.net
